// –ë–û–¢ –° –ú–ì–ù–û–í–ï–ù–ù–û–ô –†–ï–ê–ö–¶–ò–ï–ô
// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫ –º–µ–∂–¥—É –Ω–∏–º–∏
// –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)

(function() {
    const InstantResponseBot = {
        active: false,
        direction: 'right',
        moves: 0,
        rowLength: 12,
        
        // –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã
        instantPress(key) {
            document.dispatchEvent(new KeyboardEvent('keydown', {
                key: key,
                code: key,
                bubbles: true
            }));
        },
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–≤—É—Ö –∫–æ–º–∞–Ω–¥ –ø–æ–¥—Ä—è–¥ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
        doublePress(key1, key2) {
            this.instantPress(key1);
            // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ —Å–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞
            setTimeout(() => this.instantPress(key2), 1); // 1–º—Å –∑–∞–¥–µ—Ä–∂–∫–∞
        },
        
        // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
        fastMove() {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç
            const progressText = document.body.innerText;
            const match = progressText.match(/Progress\s+(\d+)/);
            if (match) {
                const score = parseInt(match[1]);
                if (score >= 1000) {
                    this.stop();
                    console.log('üèÜ –¶–ï–õ–¨ –î–û–°–¢–ò–ì–ù–£–¢–ê! –°—á–µ—Ç:', score);
                    return;
                }
            }
            
            if (this.moves >= this.rowLength) {
                // –ó–∞–≤–µ—Ä—à–∏–ª–∏ —Å—Ç—Ä–æ–∫—É - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç
                const newDirection = this.direction === 'right' ? 'left' : 'right';
                const newKey = newDirection === 'right' ? 'ArrowRight' : 'ArrowLeft';
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –î–í–ï –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥—Ä—è–¥: –≤–Ω–∏–∑ + –ø–æ–≤–æ—Ä–æ—Ç
                this.doublePress('ArrowDown', newKey);
                
                this.direction = newDirection;
                this.moves = 1; // —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ 1 —Ö–æ–¥ –≤ –Ω–æ–≤–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
                
                console.log('‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç:', newDirection);
                
            } else {
                // –û–±—ã—á–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ —Å—Ç—Ä–æ–∫–µ
                this.instantPress(this.direction === 'right' ? 'ArrowRight' : 'ArrowLeft');
                this.moves++;
            }
        },
        
        // –ó–∞–ø—É—Å–∫
        start() {
            this.active = true;
            this.direction = 'right';
            this.moves = 0;
            
            console.log('‚ö° –ë–û–¢ –° –ú–ì–ù–û–í–ï–ù–ù–û–ô –†–ï–ê–ö–¶–ò–ï–ô –ó–ê–ü–£–©–ï–ù!');
            console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫');
            
            // –ë—ã—Å—Ç—Ä—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
            this.gameTimer = setInterval(() => {
                if (this.active) {
                    this.fastMove();
                }
            }, 70); // 70–º—Å –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        },
        
        // –û—Å—Ç–∞–Ω–æ–≤–∫–∞
        stop() {
            this.active = false;
            if (this.gameTimer) {
                clearInterval(this.gameTimer);
            }
            console.log('‚èπÔ∏è –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
    };
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
    window.instantBot = InstantResponseBot;
    
    // –ê–í–¢–û–ó–ê–ü–£–°–ö
    InstantResponseBot.start();
    
    console.log('‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–û–¢ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!');
    console.log('üéÆ –ö–æ–º–∞–Ω–¥—ã: instantBot.stop() –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏');
})();